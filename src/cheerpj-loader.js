// –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ CheerpJ

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –¥–æ–º–µ–Ω–∞
async function checkCheerpJAvailability() {
    console.log("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å CheerpJ —Å–µ—Ä–≤–µ—Ä–æ–≤...");
    
    try {
        const startTime = Date.now();
        const response = await fetch('https://cjrtnc.leaningtech.com/4.1/loader.js', {
            method: 'HEAD',
            cache: 'no-cache',
            signal: AbortSignal.timeout(5000) // 5 —Å–µ–∫—É–Ω–¥ —Ç–∞–π–º–∞—É—Ç
        });
        const endTime = Date.now();
        
        console.log(`‚úÖ CheerpJ —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω (${endTime - startTime}ms), —Å—Ç–∞—Ç—É—Å: ${response.status}`);
        return true;
    } catch (error) {
        console.error("‚ùå CheerpJ —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:", error.message);
        return false;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∫—Ä–∏–ø—Ç–∞ —Å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π
function loadScriptWithDiagnostics(src, fallbacks = [], timeoutMs = 10000) {
    return new Promise((resolve, reject) => {
        console.log(`üì• –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å: ${src} (—Ç–∞–π–º–∞—É—Ç: ${timeoutMs}ms)`);
        
        const script = document.createElement('script');
        script.src = src;
        script.crossOrigin = 'anonymous'; // –î–æ–±–∞–≤–ª—è–µ–º –¥–ª—è CORS
        
        const timeout = setTimeout(() => {
            console.error(`‚è∞ –¢–∞–π–º–∞—É—Ç –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∫—Ä–∏–ø—Ç–∞: ${src}`);
            script.remove();
            reject(new Error(`Timeout loading ${src}`));
        }, timeoutMs);
        
        script.onload = () => {
            clearTimeout(timeout);
            console.log(`‚úÖ –°–∫—Ä–∏–ø—Ç –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ: ${src}`);
            resolve();
        };
        
        script.onerror = (error) => {
            clearTimeout(timeout);
            console.error(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∫—Ä–∏–ø—Ç–∞: ${src}`, error);
            script.remove();
            
            if (fallbacks.length > 0) {
                const nextSrc = fallbacks.shift();
                console.log(`üîÑ –ü—Ä–æ–±—É–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫: ${nextSrc}`);
                loadScriptWithDiagnostics(nextSrc, fallbacks, timeoutMs)
                    .then(resolve)
                    .catch(reject);
            } else {
                reject(new Error(`Failed to load ${src} and all fallbacks`));
            }
        };
        
        document.head.appendChild(script);
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞ (fallback)
function createLocalFallback() {
    console.log("‚ö†Ô∏è –°–æ–∑–¥–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –∑–∞–≥–ª—É—à–∫—É –¥–ª—è CheerpJ...");
    
    // –°–æ–∑–¥–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –∑–∞–≥–ª—É—à–∫—É –¥–ª—è cheerpjInit
    window.cheerpjInit = function() {
        return Promise.reject(new Error("CheerpJ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–∞–π—Ä–≤–æ–ª–∞/–ø—Ä–æ–∫—Å–∏."));
    };
    
    console.log("üìù –õ–æ–∫–∞–ª—å–Ω–∞—è –∑–∞–≥–ª—É—à–∫–∞ —Å–æ–∑–¥–∞–Ω–∞");
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ CheerpJ
export async function loadCheerpJ() {
    console.log("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É CheerpJ...");
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –±—Ä–∞—É–∑–µ—Ä –¥–ª—è —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö workaround'–æ–≤
    const isChromium = navigator.userAgent.includes('Chrome') || navigator.userAgent.includes('Chromium');
    
    // –°–ø–∏—Å–æ–∫ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
    const sources = [
        'https://cjrtnc.leaningtech.com/4.1/loader.js',
        'https://cjrtnc.leaningtech.com/4.0/loader.js', // —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –≤–µ—Ä—Å–∏—è
    ];
    
    // –î–ª—è Chromium –±—Ä–∞—É–∑–µ—Ä–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–æ–ª–µ–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–µ —Ç–∞–π–º–∞—É—Ç—ã
    const timeout = isChromium ? 15000 : 10000;
    console.log(`‚è±Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–∞–π–º–∞—É—Ç ${timeout}ms –¥–ª—è ${isChromium ? 'Chromium' : '–¥—Ä—É–≥–∏—Ö'} –±—Ä–∞—É–∑–µ—Ä–æ–≤`);
    
    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
    const isAvailable = await checkCheerpJAvailability();
    
    if (!isAvailable) {
        console.warn("‚ö†Ô∏è –û—Å–Ω–æ–≤–Ω–æ–π CheerpJ —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –±—É–¥–µ–º –ø—Ä–æ–±–æ–≤–∞—Ç—å –≤—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã...");
        
        if (isChromium) {
            console.warn("üîß Chromium –æ–±–Ω–∞—Ä—É–∂–µ–Ω - –ø—Ä–∏–º–µ–Ω—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ workaround'—ã");
            // –î–ª—è Chromium –ø—ã—Ç–∞–µ–º—Å—è —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
            return await loadCheerpJWithWorkarounds(sources, timeout);
        }
    }
    
    try {
        // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å —Ä–µ–∑–µ—Ä–≤–Ω—ã–º–∏ –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏
        await loadScriptWithDiagnostics(sources[0], sources.slice(1), timeout);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ CheerpJ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≥—Ä—É–∑–∏–ª—Å—è
        if (typeof window.cheerpjInit === 'undefined') {
            throw new Error("CheerpJ –∑–∞–≥—Ä—É–∂–µ–Ω, –Ω–æ cheerpjInit –Ω–µ –Ω–∞–π–¥–µ–Ω");
        }
        
        console.log("‚úÖ CheerpJ –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é");
        return true;
        
    } catch (error) {
        console.error("üí• –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ CheerpJ –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å:", error);
        
        // –í—ã–≤–æ–¥–∏–º –¥–µ—Ç–∞–ª—å–Ω—É—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É
        console.group("üîß –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–µ—Ç–∏:");
        console.log("User Agent:", navigator.userAgent);
        console.log("Online:", navigator.onLine);
        console.log("Connection:", navigator.connection ? navigator.connection.effectiveType : "unknown");
        console.log("Referrer Policy:", document.referrerPolicy);
        console.groupEnd();
        
        // –°–æ–∑–¥–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –∑–∞–≥–ª—É—à–∫—É
        createLocalFallback();
        
        return false;
    }
}

// –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –∑–∞–≥—Ä—É–∑—á–∏–∫ –¥–ª—è Chromium —Å workaround'–∞–º–∏
async function loadCheerpJWithWorkarounds(sources, timeout) {
    console.log("üîß –ü—Ä–∏–º–µ–Ω—è–µ–º Chromium workaround'—ã...");
    
    // –ü–æ–ø—ã—Ç–∫–∞ 1: –ó–∞–≥—Ä—É–∑–∫–∞ —á–µ—Ä–µ–∑ fetch + eval (–æ–±—Ö–æ–¥–∏—Ç –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ CSP –ø—Ä–æ–±–ª–µ–º—ã)
    try {
        console.log("üì• –ü–æ–ø—ã—Ç–∫–∞ 1: fetch + eval");
        const response = await fetch(sources[0], {
            mode: 'cors',
            credentials: 'omit',
            referrerPolicy: 'no-referrer'
        });
        
        if (response.ok) {
            const scriptContent = await response.text();
            eval(scriptContent);
            
            if (typeof window.cheerpjInit !== 'undefined') {
                console.log("‚úÖ CheerpJ –∑–∞–≥—Ä—É–∂–µ–Ω —á–µ—Ä–µ–∑ fetch + eval");
                return true;
            }
        }
    } catch (error) {
        console.warn("‚ùå Fetch + eval –ø—Ä–æ–≤–∞–ª–∏–ª—Å—è:", error.message);
    }
    
    // –ü–æ–ø—ã—Ç–∫–∞ 2: –°–æ–∑–¥–∞–Ω–∏–µ iframe –¥–ª—è –æ–±—Ö–æ–¥–∞ CSP
    try {
        console.log("üì• –ü–æ–ø—ã—Ç–∫–∞ 2: iframe workaround");
        return await loadViaIframe(sources[0]);
    } catch (error) {
        console.warn("‚ùå Iframe workaround –ø—Ä–æ–≤–∞–ª–∏–ª—Å—è:", error.message);
    }
    
    // –ü–æ–ø—ã—Ç–∫–∞ 3: –û–±—ã—á–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞ —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º —Ç–∞–π–º–∞—É—Ç–æ–º
    try {
        console.log("üì• –ü–æ–ø—ã—Ç–∫–∞ 3: —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º —Ç–∞–π–º–∞—É—Ç–æ–º");
        await loadScriptWithDiagnostics(sources[0], sources.slice(1), timeout);
        
        if (typeof window.cheerpjInit !== 'undefined') {
            console.log("‚úÖ CheerpJ –∑–∞–≥—Ä—É–∂–µ–Ω —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º");
            return true;
        }
    } catch (error) {
        console.warn("‚ùå –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–≤–∞–ª–∏–ª–∞—Å—å:", error.message);
    }
    
    return false;
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —á–µ—Ä–µ–∑ iframe –¥–ª—è –æ–±—Ö–æ–¥–∞ CSP
function loadViaIframe(src) {
    return new Promise((resolve, reject) => {
        const iframe = document.createElement('iframe');
        iframe.style.display = 'none';
        iframe.onload = () => {
            try {
                // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏ iframe
                const iframeWindow = iframe.contentWindow;
                
                if (iframeWindow && iframeWindow.cheerpjInit) {
                    // –ö–æ–ø–∏—Ä—É–µ–º cheerpjInit –≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–µ –æ–∫–Ω–æ
                    window.cheerpjInit = iframeWindow.cheerpjInit;
                    window.cheerpjRunLibrary = iframeWindow.cheerpjRunLibrary;
                    
                    iframe.remove();
                    resolve(true);
                } else {
                    iframe.remove();
                    reject(new Error("CheerpJ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ iframe"));
                }
            } catch (error) {
                iframe.remove();
                reject(error);
            }
        };
        
        iframe.onerror = () => {
            iframe.remove();
            reject(new Error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ iframe"));
        };
        
        // –°–æ–∑–¥–∞–µ–º HTML –¥–ª—è iframe —Å –∑–∞–≥—Ä—É–∑–∫–æ–π CheerpJ
        const iframeHTML = `
            <!DOCTYPE html>
            <html>
            <head>
                <script src="${src}"></script>
            </head>
            <body></body>
            </html>
        `;
        
        document.body.appendChild(iframe);
        iframe.contentDocument.open();
        iframe.contentDocument.write(iframeHTML);
        iframe.contentDocument.close();
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è
export function diagnoseEnvironment() {
    console.group("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è:");
    console.log("Browser:", navigator.userAgent);
    console.log("Platform:", navigator.platform);
    console.log("Online:", navigator.onLine);
    console.log("Cookies enabled:", navigator.cookieEnabled);
    console.log("Language:", navigator.language);
    console.log("Screen:", `${screen.width}x${screen.height}`);
    console.log("Viewport:", `${window.innerWidth}x${window.innerHeight}`);
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –±—Ä–∞—É–∑–µ—Ä
    const isChrome = navigator.userAgent.includes('Chrome');
    const isSafari = navigator.userAgent.includes('Safari') && !navigator.userAgent.includes('Chrome');
    const isChromium = navigator.userAgent.includes('Chromium') || isChrome;
    
    console.log("Browser type:", {
        isChrome,
        isSafari,
        isChromium,
        engine: isChromium ? 'Blink/V8' : (isSafari ? 'WebKit/JavaScriptCore' : 'Unknown')
    });
    
    if (navigator.connection) {
        console.log("Connection type:", navigator.connection.effectiveType);
        console.log("Connection speed:", navigator.connection.downlink + " Mbps");
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º CSP
    try {
        const testScript = document.createElement('script');
        testScript.textContent = 'window.cspTest = true;';
        document.head.appendChild(testScript);
        document.head.removeChild(testScript);
        console.log("CSP inline scripts:", window.cspTest ? 'Allowed' : 'Blocked');
        delete window.cspTest;
    } catch (e) {
        console.log("CSP inline scripts: Blocked (" + e.message + ")");
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫–∏ —Ä–µ–∫–ª–∞–º—ã/—Å–∫—Ä–∏–ø—Ç–æ–≤
    const testDiv = document.createElement('div');
    testDiv.className = 'ad ads advertisement';
    testDiv.style.position = 'absolute';
    testDiv.style.left = '-9999px';
    document.body.appendChild(testDiv);
    
    setTimeout(() => {
        const blocked = testDiv.offsetHeight === 0;
        console.log("Ad blocker detected:", blocked);
        testDiv.remove();
    }, 100);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º CORS preflight –¥–ª—è CheerpJ –¥–æ–º–µ–Ω–∞
    checkCORSSupport();
    
    console.groupEnd();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ CORS –ø–æ–¥–¥–µ—Ä–∂–∫–∏
async function checkCORSSupport() {
    try {
        // –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ OPTIONS –∑–∞–ø—Ä–æ—Å–∞
        const controller = new AbortController();
        setTimeout(() => controller.abort(), 3000);
        
        const response = await fetch('https://cjrtnc.leaningtech.com/4.1/', {
            method: 'HEAD',
            mode: 'cors',
            signal: controller.signal
        });
        
        console.log("CORS support for cjrtnc.leaningtech.com:", response.ok ? 'OK' : 'Issues detected');
    } catch (error) {
        console.log("CORS check failed:", error.message);
    }
} 